{"version":3,"file":"static/webpack/static/development/pages/index.js.a3c13d4726ef2763d09b.hot-update.js","sources":["webpack:///./components/music.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n  background-color: #fff;\n  transform: ${props =>\n    props.modalOpen ? \"translateX(0)\" : \"translateX(-100%)\"};\n  transition: transform 0.7s;\n  transition-timing-function: cubic-bezier(0.86, 0.01, 0.77, 0.78);\n`;\n\nconst AlbumContainer = styled.div`\n  height: 100%;\n  width: 54%;\n  background-color: #f4f4f4;\n  float: left;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    height: 50%;\n  }\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(\"https://images-na.ssl-images-amazon.com/images/I/91KM9OX5V6L._SX450_.jpg\");\n`;\n\nconst Songs = styled.div`\n  height: 100%;\n  width: 46%;\n  background-color: #fff;\n  float: right;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-top: 50px;\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst SongContent = styled.div`\n  width: 100%;\n  padding: 20% 20%;\n  font-family: \"Raleway\";\n  @media only screen and (max-width: 768px) {\n    padding: 10% 20%;\n  }\n`;\n\nconst SongsList = styled.ul`\n  text-align: left;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  outline: none;\n`;\n\nconst Song = styled.li`\n  text-align: left;\n  display: inline-block;\n  border-top: 1px solid #bebebe;\n  width: 100%;\n  padding: 17px 0 17px 0;\n  margin: -3px;\n  &:hover {\n    background-color: #dee0e2;\n  }\n`;\n\nconst SongName = styled.span`\n  width: 58%;\n  float: left;\n  color: #4d4d4e;\n`;\n\nconst SongLength = styled.span`\n  width: 8.3%;\n  float: right;\n  text-align: right;\n  padding-right: 0.5em;\n  color: #4d4d4e;\n`;\n\nconst PlayPause = styled(FontAwesomeIcon)`\n  width: 8.3%;\n  float: left;\n  padding-left: 0.5em;\n  padding-right: 1em;\n  margin-top: 0.1em;\n  outline: 0;\n`;\n\nconst Cancel = styled.img`\n  width: 25px;\n  height: auto;\n  position: absolute;\n  right: 30px;\n  top: 30px;\n`;\n\nconst songs = [\n  {\n    name: \"Test Song\",\n    url: \"https://sample-videos.com/audio/mp3/crowd-cheering.mp3\",\n    length: \"3:20\",\n    id: 1\n  },\n  {\n    name: \"Test Song\",\n    url: \"https://sample-videos.com/audio/mp3/crowd-cheering.mp3\",\n    length: \"3:20\",\n    id: 2\n  },\n  {\n    name: \"Test Song\",\n    url: \"https://sample-videos.com/audio/mp3/crowd-cheering.mp3\",\n    length: \"3:20\",\n    id: 3\n  }\n];\n\nexport default class Music extends Component {\n  state = {\n    open: false,\n    playing: 0\n  };\n  componentDidMount() {\n    if (window.location.href.includes(\"#music\")) {\n      this.setState({ open: true });\n    }\n    console.log(\"Mounted\");\n    window.onhashchange = () => {\n      if (window.location.href.includes(\"#music\")) {\n        this.setState({ open: true });\n      }\n    };\n    this.audio = new Audio();\n    this.audio.addEventListener(\"ended\", () => {\n      this.setState({ playing: false });\n    });\n  }\n  toggleSong(song) {\n    if (this.state.playing !== song.id) {\n      this.audio.src = song.url;\n      this.audio.play();\n      this.setState({ playing: song.id });\n    } else {\n      this.audio.pause();\n      this.setState({ playing: 0 });\n    }\n  }\n  closeWindow() {\n    this.setState({ open: false });\n    window.history.back();\n  }\n  render() {\n    return (\n      <Container modalOpen={this.state.open}>\n        <AlbumContainer />\n        <Songs>\n          <SongContent>\n            <SongsList>\n              {songs.map(song => (\n                <Song>\n                  <PlayPause\n                    icon={song.id == this.state.playing ? \"pause\" : \"play\"}\n                    onClick={() => this.toggleSong(song)}\n                  />\n                  <SongName>{song.name}</SongName>\n                  <SongLength>{song.length}</SongLength>\n                </Song>\n              ))}\n            </SongsList>\n          </SongContent>\n        </Songs>\n        <Cancel\n          src=\"https://hthstsa-af51.kxcdn.com/static/cancel.svg\"\n          onClick={() => this.closeWindow()}\n        />\n      </Container>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAMA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAcA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA5DA;AACA;;;;;A","sourceRoot":""}