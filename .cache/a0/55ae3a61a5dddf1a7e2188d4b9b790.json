{"id":"node_modules/jss/lib/utils/createGenerateClassName.js","dependencies":[{"name":"/home/kusti8/Documents/Github/webmaster2019/package.json","includedInParent":true,"mtime":1553113739742},{"name":"/home/kusti8/Documents/Github/webmaster2019/.babelrc","includedInParent":true,"mtime":1553111962055},{"name":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/package.json","includedInParent":true,"mtime":1553111896444},{"name":"warning","loc":{"line":7,"column":23},"parent":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/lib/utils/createGenerateClassName.js","resolved":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/node_modules/warning/browser.js"},{"name":"../StyleSheet","loc":{"line":11,"column":26},"parent":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/lib/utils/createGenerateClassName.js","resolved":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/lib/StyleSheet.js"},{"name":"./moduleId","loc":{"line":15,"column":24},"parent":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/lib/utils/createGenerateClassName.js","resolved":"/home/kusti8/Documents/Github/webmaster2019/node_modules/jss/lib/utils/moduleId.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _StyleSheet = require('../StyleSheet');\n\nvar _StyleSheet2 = _interopRequireDefault(_StyleSheet);\n\nvar _moduleId = require('./moduleId');\n\nvar _moduleId2 = _interopRequireDefault(_moduleId);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar maxRules = 1e10;\nvar env = \"development\";\n/**\n * Returns a function which generates unique class names based on counters.\n * When new generator function is created, rule counter is reseted.\n * We need to reset the rule counter for SSR for each request.\n */\n\nexports['default'] = function () {\n  var ruleCounter = 0;\n  var defaultPrefix = env === 'production' ? 'c' : '';\n  return function (rule, sheet) {\n    ruleCounter += 1;\n\n    if (ruleCounter > maxRules) {\n      (0, _warning2['default'])(false, '[JSS] You might have a memory leak. Rule counter is at %s.', ruleCounter);\n    }\n\n    var prefix = defaultPrefix;\n    var jssId = '';\n\n    if (sheet) {\n      prefix = sheet.options.classNamePrefix || defaultPrefix;\n      if (sheet.options.jss.id != null) jssId += sheet.options.jss.id;\n    }\n\n    if (env === 'production') {\n      return '' + prefix + _moduleId2['default'] + jssId + ruleCounter;\n    }\n\n    return prefix + rule.key + '-' + _moduleId2['default'] + (jssId && '-' + jssId) + '-' + ruleCounter;\n  };\n};"},"sourceMaps":null,"error":null,"hash":"8afba8391f33f77c04f569d89de38796","cacheData":{"env":{"NODE_ENV":"development"}}}